/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;
import javax.swing.Timer;
import main.WinkelApplication;
import model.Gebruiker;

/**
 *
 * @author Sarfaraaz
 */
public class DatabaseOverzicht extends javax.swing.JPanel {
    private static Color lbl_color = new Color(51, 102, 255);
    private static Color lbl_hovercolor = new Color(51, 51, 255);
    private Timer timer;
    private Gebruiker gebruiker;

    /**
     * Creates new form DatabaseOverzicht
     */
    public DatabaseOverzicht(Gebruiker gebruiker) {
        this.gebruiker = gebruiker;
        
        initComponents();
        WinkelApplication.setSize(getPreferredSize());
        WinkelApplication.center();
        getDatabases();
    }

    private void getDatabases() {
        File dir = new File("database");
        DefaultListModel model = new DefaultListModel();
        l_databases.setModel(model);
        model.clear();

        for (File file : dir.listFiles()) {
            if (!file.getName().equals("backup.bat") && !file.getName().equals("herstel.bat")) {
                model.addElement(file.getName());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_back = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        l_databases = new javax.swing.JList();
        btn_zetterug = new javax.swing.JButton();
        btn_maakbackup = new javax.swing.JButton();
        btn_verwijderen = new javax.swing.JButton();

        setOpaque(false);

        lbl_back.setForeground(new java.awt.Color(51, 102, 255));
        lbl_back.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_back.setText("Terug naar hoofdmenu");
        lbl_back.setAlignmentY(0.0F);
        lbl_back.setMaximumSize(new java.awt.Dimension(130, 14));
        lbl_back.setMinimumSize(new java.awt.Dimension(130, 14));
        lbl_back.setPreferredSize(new java.awt.Dimension(130, 14));
        lbl_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_backMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_backMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_backMousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Databases");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jScrollPane1.setOpaque(false);

        l_databases.setOpaque(false);
        jScrollPane1.setViewportView(l_databases);

        btn_zetterug.setText("Terugzetten");
        btn_zetterug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_zetterugActionPerformed(evt);
            }
        });

        btn_maakbackup.setText("Maak backup");
        btn_maakbackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_maakbackupActionPerformed(evt);
            }
        });

        btn_verwijderen.setText("Verwijderen");
        btn_verwijderen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_verwijderenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_maakbackup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_zetterug, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_verwijderen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(117, 117, 117)
                        .addComponent(lbl_back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_maakbackup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_verwijderen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_zetterug)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_maakbackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_maakbackupActionPerformed
        try {
            WinkelApplication.getQueryManager().createBackup();
        } catch (InterruptedException ex) {
            Logger.getLogger(DatabaseOverzicht.class.getName()).log(Level.SEVERE, null, ex);
        }

        timer = new Timer(1000, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                getDatabases();
                timer.stop();
            }
        });
        timer.start();
    }//GEN-LAST:event_btn_maakbackupActionPerformed

    private void btn_zetterugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_zetterugActionPerformed
        if (l_databases.getSelectedIndex() != -1) {
            String filename = l_databases.getSelectedValue().toString();
            WinkelApplication.getQueryManager().restoreBackup(filename);
        }
    }//GEN-LAST:event_btn_zetterugActionPerformed

    private void btn_verwijderenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_verwijderenActionPerformed
        if (l_databases.getSelectedIndex() != -1) {
            File file = new File("database\\" + l_databases.getSelectedValue().toString());
            if (file.exists()) {
                file.delete();
            } else {
                System.out.println("File bestaat niet!");
            }

            getDatabases();
        }
    }//GEN-LAST:event_btn_verwijderenActionPerformed

    private void lbl_backMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMouseEntered
        lbl_back.setText("<html><u>Terug naar hoofdmenu</u></html>");
        lbl_back.setForeground(lbl_hovercolor);
    }//GEN-LAST:event_lbl_backMouseEntered

    private void lbl_backMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMouseExited
        lbl_back.setText("Terug naar hoofdmenu");
        lbl_back.setForeground(lbl_color);
    }//GEN-LAST:event_lbl_backMouseExited

    private void lbl_backMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMousePressed
        WinkelApplication.getInstance().showPanel(new view.MainMenu1(gebruiker));
    }//GEN-LAST:event_lbl_backMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_maakbackup;
    private javax.swing.JButton btn_verwijderen;
    private javax.swing.JButton btn_zetterug;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList l_databases;
    private javax.swing.JLabel lbl_back;
    // End of variables declaration//GEN-END:variables
}
